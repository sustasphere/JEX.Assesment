// <auto-generated />
using JEX.Assessment.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JEX.Assessment.API.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyAddressSetCompanySet", b =>
                {
                    b.Property<int>("AddressesId")
                        .HasColumnType("int");

                    b.Property<int>("CompanySetId")
                        .HasColumnType("int");

                    b.HasKey("AddressesId", "CompanySetId");

                    b.HasIndex("CompanySetId");

                    b.ToTable("CompanyAddressSetCompanySet");
                });

            modelBuilder.Entity("CompanyNameSetCompanySet", b =>
                {
                    b.Property<int>("CompanySetId")
                        .HasColumnType("int");

                    b.Property<int>("NamesId")
                        .HasColumnType("int");

                    b.HasKey("CompanySetId", "NamesId");

                    b.HasIndex("NamesId");

                    b.ToTable("CompanyNameSetCompanySet");
                });

            modelBuilder.Entity("JEX.Assessment.Persistence.V1.Types.Sets.CompanyAddressSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyAddressSet");
                });

            modelBuilder.Entity("JEX.Assessment.Persistence.V1.Types.Sets.CompanyNameSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyNameSet");
                });

            modelBuilder.Entity("JEX.Assessment.Persistence.V1.Types.Sets.CompanySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanySet");
                });

            modelBuilder.Entity("JEX.Assessment.Persistence.V1.Types.Sets.VacancySet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacancyGuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VacancySet");
                });

            modelBuilder.Entity("CompanyAddressSetCompanySet", b =>
                {
                    b.HasOne("JEX.Assessment.Persistence.V1.Types.Sets.CompanyAddressSet", null)
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JEX.Assessment.Persistence.V1.Types.Sets.CompanySet", null)
                        .WithMany()
                        .HasForeignKey("CompanySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyNameSetCompanySet", b =>
                {
                    b.HasOne("JEX.Assessment.Persistence.V1.Types.Sets.CompanySet", null)
                        .WithMany()
                        .HasForeignKey("CompanySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JEX.Assessment.Persistence.V1.Types.Sets.CompanyNameSet", null)
                        .WithMany()
                        .HasForeignKey("NamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
